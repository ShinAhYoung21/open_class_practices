//script 태그는, 이제 js가 나온다는 약속

//Event =웹 브라우저에서 일어나는 일들. on으로 시작하는 attributes
//(이건 html얘기)button에 텍스트 넣고 싶으면 value값으로 지정하면 된다.

//js alert 검색해서 참고해서 쓰면 됨

//onclick, onchange 등은 event를 나타내는 속성. 속성값으로는 js를 갖는다. 이벤트 발생 시, 속성값으로 지정된 js를 실행하는 기능을 한다.


//콘솔: 웹페이지 검사 메뉴에서 console을 이용하면, 파일 만들지 않고도 js코드 즉석 실행해볼 수 있다.

//페북에서 원하는 갯수의 댓글 추첨하는 방법도 js 콘솔로 가능! _알고리즘을 통해 코드를 짤 줄 안다면 말이지!
//콘솔에서 커서를 두고 위쪽 화살표 키보드를 누르면, '직전에 실행한 코드'가 자동입력된다.

//이미 있는 웹사이트에서 콘솔에서 js를 작성해서 문제를 해결할 수 있다.


//Data type: 문자열, 숫자

//글자수 세기
alert('무언가 있을까요 없을까요 어떨까요 언제나갈까요 언제 갔다올까요 랄라리랄라'.length)

//숫자
//연산이 가능하다.
alert(1);
alert(1+1);
1+1 //왼쪽 값과 오른쪽 값을 더해 하나로 만든다. 그래서 +은 산술연산자.
// +,-,*,/ 산술연산자.

//문자 : 따옴표로 시작해서 따옴표로 끝낸다.
//js에서 '문자열'은 String이라고 한다.
"hell the hell".length
'hell the hell'.toUpperCase
//엥 왜 실행안되냐.

"1"+"1" //11이라고 나옴.
//데이터 타입을 정확하게 표현하는 것에 관심 갖고 연습해야 한다!


//변수=variable. 바뀔 수 있는 것.
//변수를 쓸 때, 앞에 var을 쓰는 게 좀 더 좋은 습관이라고 함! var의 장점과 단점을 알기 전까지는 그냥 항상 습관적으로 쓰기! (앞에 var 안 붙이더라도 기능이 작동하기는 한다.)
x = 1;
//x는 variable, '='은 대입연산자.
//오른쪽 항의 값을 왼쪽 변수에 대입한다.

//상수 Constant. 항상 바뀌지 않는 값.

//"+(텍스트)+"이러면 변수처리 된거라고 함.
//변수 선언할 때, '변수'자체는 따옴표 안 쓰는 것 주의! "여러분" = (텍스트)라고 입력하면 오류 난다. [Invalid left-hand side in assignment]
var 여러분 = "(text)"
console.log("사랑하는 가족 구성원 "+여러분+", 수험생의 시험 합격을 기원하며 몇 가지 규칙사항이 있습니다. 우리 "+여러분+"께서는 배려심 넘치는 마음으로, 수험생의 공부 집중을 위해 협력해 주실 것을 믿습니다. :)")
//콘솔에서 실행을 미루고 싶으면 Shift + Enter.  *Enter누르면 바로 실행되니까.


//css기초 style태그
//html의 div 태그는 아무 의미가 없다. 다만, css나 js로 제어하고 싶은 정보를 감싸주는 태그!
//div는 화면 너비를 통으로 쓰기 때문에, 저절로 줄바꿈이 된다. 줄바꿈이 되지 않는 무색무취의 태그는 span이다.


//css기초, 선택자 : 매우 중요!
//이건 식당게임으로 연습했던 터라, 걍 보기만.
// .이 붙는건 class, #이 붙는 건 id를 나타낸다.
//class는 무언가를 그루핑하는 것. id는 한 가지를 식별하는 것으로 유일하다.
//.이나 #등을 붙이지 않고쓰면 그건 태그를 지칭하는 선택자!
//우선순위는 id > class > tag. 타게팅이 정밀할 수록 힘이 세다!


//제어할 태그 선택하기
//query: 질의한다. Selector: css의 셀렉터(선택자) = querySelector


//프로그램, 프로그래밍, 프로그래머
/*
html과 js는 둘 다 컴퓨터 언어이다.
그런데, js는 컴 언어임과 동시에 컴 프로그래밍 언어이기도 하다. html은 프로그래밍언어는 아니다.

프로그램: 순서. 음악회를 예로 들면, 시간에 따라 연주되는 순서.
프로그래밍= 순서를 만드는 것.
프로그래머= 순서를 만드는 사람.
**아하, 알고리즘이 그래서 중요하구나.

이고잉's 프로그래밍 본질 = 시간 순서에 따라 진행되어야 하는 기능을 프로그래밍 언어의 문법에 맞게 글로 적어두는 방식을 고안했고, 그 글을 컴퓨터에게 전달하는 것.
여기에 조건에 따라 실행, 반복실행, 복잡한 순서를 정리하는 방법 등이 차차 고안된 것.

js는 시간 순에 따라 기능들이 실행되어야 하기 때문에 프로그래밍이라는 형태를 띄고 있다. html은 순서대로 기능하는 것은 아니다.
*/
